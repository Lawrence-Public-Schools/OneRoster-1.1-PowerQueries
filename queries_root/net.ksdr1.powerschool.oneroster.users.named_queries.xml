<queries>
  <query name="net.ksdr1.powerschool.oneroster.users" coreTable="users" flattened="true">
	<summary>OneRoster 1.1 users</summary>
    <columns>
      <column column="USERS.STATE">a_sourcedId</column>
	  <column column="SCHOOLSTAFF.STATUS">b_status</column>
	  <column column="USERS.HOMEROOM">c_dateLastModified</column>
	  <column column="SCHOOLSTAFF.STATUS">d_enabledUser</column>
	  <column column="USERS.HOMESCHOOLID">e_orgSourcedIds</column>
	  <column column="USERS.LOGINID">f_role</column>
	  <column column="USERS.TEACHERLOGINID">g_username</column>
	  <column column="USERS.ZIP">h_userIds</column>
	  <column column="USERS.FIRST_NAME">i_givenName</column>
	  <column column="USERS.LAST_NAME">j_familyName</column>
	  <column column="USERS.MIDDLE_NAME">k_middleName</column>
	  <column column="USERS.TEACHERNUMBER">l_identifier</column>
	  <column column="USERS.EMAIL_ADDR">m_email</column>
	  <column column="USERS.SCHOOL_PHONE">n_sms</column>
	  <column column="USERS.HOME_PHONE">o_phone</column>
	  <column column="USERS.CITY">p_agentSourcedIds</column>
	  <column column="USERS.TITLE">q_grades</column>
	  <column column="USERS.STREET">r_password</column>
    </columns>
    <sql><![CDATA[
with orgSource as (select 
  users.dcid as dcid,
  case cast(schoolstaff.SchoolID as varchar2(10))
    when '0' then cast((select prefs.value from prefs where prefs.name = 'districtnumber') as varchar2(10))
    else cast(schoolstaff.SchoolID as varchar2(10))
	end as SchoolID
from users
join schoolstaff on schoolstaff.users_dcid = users.dcid and schoolstaff.status = 1  and schoolstaff.staffstatus = 1
)
-- teachers
select 
  'T'||users.dcid as sourcedId,
  null as status,
  null as dateLastModified,
  case schoolstaff.status
    when 1 then 'true'
    else 'false'
  end as enabledUser,
  LISTAGG(orgSource.SchoolID, ',') WITHIN GROUP (ORDER BY orgSource.SchoolID) as orgSourcedIds,
  'teacher' as role,
  users.teacherloginid as username,
  null as userIds,
  users.first_name as givenName,
  users.last_name as familyName,
  substr(users.middle_name,0,1) as middleName,
  users.teachernumber as identifier,
  users.email_addr as email,
  null as sms,
  users.home_phone as phone,
  null as agentSourcedIds,
  null as grades,
  null as password
from users
join (select * from orgSource) orgSource on orgSource.dcid = users.dcid
join schoolstaff on schoolstaff.users_dcid = users.dcid
where users.homeschoolid = schoolstaff.schoolid
and users.email_addr is not null
and users.teacherloginid is not null
group by 'T'||users.dcid, null, null, case schoolstaff.status when 1 then 'true' else 'false' end , 'teacher', users.teacherloginid,
null, users.first_name, users.last_name, substr(users.middle_name,0,1), users.teachernumber, users.email_addr, null, users.home_phone, null, null, null

union all

-- students
select
  'S'||students.dcid as sourcedId,
  null as status,
  null as dateLastModified,
  case students.enroll_status
    when 0 then 'true'
    when -1 then 'true'
    else 'false'
  end as enabledUser,
  cast(students.schoolid as varchar2(10)) as orgSourcedIds,
  'student' as role,
  students.student_web_id as username,
  null as userIds,
  students.first_name as givenName,
  students.last_name as familyName,
  substr(students.middle_name,0,1) as middleName,
  to_char(students.student_number) as identifier,
  psm_studentcontact.email as email,
  null as sms,
  students.home_phone as phone,
  -- listagg() creates comma-separated aggregate list for all linked guardian contacts, then replace() removes those that don't have a PCAS account
  case 
    when (replace(listagg('G'||guardian.guardianid,',') within group (ORDER BY students.student_number),'G,','')) = 'G' then null 
    else (replace(listagg('G'||guardian.guardianid,',') within group (ORDER BY students.student_number),'G,','')) end as agentSourcedIds,
  case 
    when students.grade_level <= -3 then 'IT'
    when students.grade_level between -2 and -1 then 'PK'
    when students.grade_level = 0 then 'KG'
    when students.grade_level between 1 and 12 then trim(to_char(students.grade_level,'00'))
    when students.grade_level > 12 then 'PS'
    else 'Other'
  end as grades,
  null as password
from students
left join schools on students.schoolid = schools.school_number
-- student email join graph
left join schools on students.schoolid = schools.school_number
left join sync_studentmap on students.dcid = sync_studentmap.studentsdcid
left join psm_studentcontact on psm_studentcontact.studentid = sync_studentmap.studentid
left join psm_studentcontacttype on psm_studentcontacttype.id = psm_studentcontact.studentcontacttypeid
-- multi-guardian join graph
left join studentcontactassoc on students.dcid = studentcontactassoc.studentdcid
left join guardianpersonassoc on studentcontactassoc.personid = guardianpersonassoc.personID
left join guardian on guardianpersonassoc.guardianid = guardian.guardianid
left join pcas_account on GUARDIAN.accountidentifier = pcas_account.pcas_accounttoken 
where students.student_web_id is not null
and psm_studentcontact.email is not null
and psm_studentcontacttype.name = 'Self'

group by 'S'||students.dcid, null, null, case students.enroll_status when 0 then 'true' when -1 then 'true' else 'false' end, cast(students.schoolid as varchar2(10)), 
'student', students.student_web_id, null, students.first_name, students.last_name, 
substr(students.middle_name,0,1), to_char(students.student_number),psm_studentcontact.email, null, students.home_phone, 
case when students.grade_level <= -3 then 'IT' when students.grade_level between -2 and -1 then 'PK' when students.grade_level = 0 then 'KG' when students.grade_level between 1 and 12 then trim(to_char(students.grade_level,'00')) when students.grade_level > 12 then 'PS' else 'Other' end, null

union all

-- guardians
select 
  'G'||guardian.guardianid as sourcedId,
  null as status,
  null as dateLastModified,
  case PCAS_ACCOUNT.ISENABLED
    when 1 then 'true'
    else 'false'
  end as enabledUser,
  '2195' as orgSourcedIds,
  'guardian' as role,
  pcas_account.username as username,
  null as userIds,
  guardian.firstname as givenName,
  guardian.lastname as familyName,
  null as middleName,
  null as identifier,
  pcas_emailcontact.emailaddress as email,
  null as sms,
  null as phone,
  case 
    when (replace(listagg('S'||studentcontactassoc.studentdcid,',') within group (ORDER BY guardian.guardianid),'S,','')) = 'S' then null 
    else (replace(listagg('S'||studentcontactassoc.studentdcid,',') within group (ORDER BY guardian.guardianid),'S,','')) end as agentSourcedIds,
  null as grades,
  null as password
from guardian
left join pcas_account on GUARDIAN.accountidentifier = pcas_account.pcas_accounttoken
left join pcas_emailcontact on pcas_account.pcas_accountID = pcas_emailcontact.pcas_accountid
left join guardianpersonassoc on guardian.guardianid = guardianpersonassoc.guardianid
left join studentcontactassoc on guardianpersonassoc.personID = studentcontactassoc.personID 
where PCAS_ACCOUNT.ISENABLED = 1 
group by 'G'||guardian.guardianid, null, null, case PCAS_ACCOUNT.ISENABLED when 1 then 'true' else 'false' end, '2195', 
'guardian', pcas_account.username, null, guardian.firstname, guardian.lastname, 
null, null, pcas_emailcontact.emailaddress, null, null, 
null, null

    ]]></sql>
  </query>
  <!-- Define more queries here -->
</queries>