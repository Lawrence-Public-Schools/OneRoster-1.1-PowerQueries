<queries>
  <query name="net.ksdr1.powerschool.oneroster.enrollments" coreTable="cc" flattened="true">
	<summary>OneRoster 1.1 enrollments</summary>
    <columns>
      <column column="CC.STUDENTSECTENRL_GUID">a_sourcedId</column>
	  <column column="CC.SECTION_NUMBER">b_status</column>
	  <column column="CC.LASTGRADEUPDATE">c_dateLastModified</column>
	  <column column="CC.SECTIONID">d_classSourcedId</column>
	  <column column="CC.ID">e_schoolSourcedId</column>
	  <column column="CC.COURSE_NUMBER">f_userSourcedId</column>
	  <column column="CC.EXPRESSION">g_role</column>
	  <column column="CC.AB_COURSE_CMP_FUN_FLG">h_primary</column>
	  <column column="CC.DATEENROLLED">i_beginDate</column>
	  <column column="CC.DATELEFT">k_endDate</column>
    </columns>
    <sql><![CDATA[
with yearquery as (select 
  id, abbreviation
from terms
where portion = 1
  AND terms.lastday > sysdate
  AND sysdate > terms.firstday-30
  AND schoolid=0
)

select 
  'ST'||sectionteacher.id||'-T'||schoolstaff.users_dcid as sourcedId,
  null as status,
  null as dateLastModified,
  sectionteacher.sectionid as classSourcedId,
  sections.schoolid as schoolSourcedId,
  'T'||schoolstaff.users_dcid as userSourcedId,
  case roledef.name
    when 'Lead Teacher' then 'teacher'
    when 'Co-teacher' then 'teacher'
    when 'DESE Co-teacher' then 'teacher'
    when 'ESL/SPED Teacher' then 'teacher'
    when 'Teacher''s Aide' then 'aide'
    when 'Principal' then 'administrator'
    when 'School Administrator' then 'administrator'
    else 'aide'
  end as role,
  case roledef.name
    when 'Lead Teacher' then 'true'
    when 'Co-teacher' then 'false'
    when 'DESE Co-teacher' then 'false'
    when 'ESL/SPED Teacher' then 'false'
    when 'Teacher''s Aide' then 'false'
    when 'Principal' then 'false'
    when 'School Administrator' then 'false'
    else 'false'
  end as primary,
  to_char(sectionteacher.start_date,'yyyy-mm-dd') as beginDate,
  to_char(sectionteacher.end_date,'yyyy-mm-dd') as endDate
  
  
from sectionteacher
left join schoolstaff on schoolstaff.id = sectionteacher.teacherid
left join users on schoolstaff.users_dcid = users.dcid
left join sections on sectionteacher.sectionid = sections.id
left join schools on users.homeschoolid = schools.school_number
left join roledef on sectionteacher.roleid = roledef.id
left join courses on sections.course_number = courses.course_number
left join yearquery on 1=1
join (SELECT 
    sectionid,
    COUNT(sectionid) as NO_OF_STUDENTS
    from cc
    GROUP BY sectionid
    ) q ON sections.id = q.sectionid
and sectionteacher.sectionid in 
(
  select sections.id from sections
  left join yearquery on 1=1
  where sections.termid between yearquery.id and yearquery.id+99
)
and (users.teacherloginid is not null or users.loginid is not null)
where sections.termid between yearquery.id and yearquery.id+99
and schoolstaff.status = 1

union all

select
 'S'||cc.dcid as sourcedId,
 null as status,
 null as dateLastModified,
 cc.sectionid as classSourcedId,
 cc.schoolid as schoolSourcedId,
 'S'||students.dcid as userSourcedId,
 'student' as role,
 null as primary,
 to_char(cc.dateenrolled,'yyyy-mm-dd') as beginDate,
 to_char(cc.dateleft-1,'yyyy-mm-dd') as endDate
from cc
left join students on cc.studentid = students.id
left join schools on cc.schoolid = schools.school_number
left join yearquery on 1=1
left join schools on students.schoolid = schools.school_number
left join sync_studentmap on students.dcid = sync_studentmap.studentsdcid
left join psm_studentcontact on psm_studentcontact.studentid = sync_studentmap.studentid
left join psm_studentcontacttype on psm_studentcontacttype.id = psm_studentcontact.studentcontacttypeid
left join courses on cc.course_number = courses.course_number
where students.enroll_status = 0
and psm_studentcontacttype.name = 'Self'
and schools.STATE_EXCLUDEFROMREPORTING = 0
and (cc.termid between yearquery.id and yearquery.id+99)
and cc.dateleft > cc.dateenrolled
    ]]></sql>
  </query>
  <!-- Define more queries here -->
</queries>